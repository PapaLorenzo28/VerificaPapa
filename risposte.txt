1) Le commit create in una repository locale, NON vengono sincronizzate
automaticamente con la repository online collegata.

2) MAIN è il nuovo nome standard del branch principale utilizzato come
convenzione in GIT.

3) Il workflow dei comandi di GIT é: git add -> git commit -> git push

4) Il comando da utilizzare per vedere l’elenco di tutte le commit del
branch in cui ci si trova e i loro hashcode è GIT LOG.

5) Il comando per effettuare il rollback ad una commit precedente è:
	GIT RESET --HARD [HASH DELLA COMMIT]

6) Le due motivazioni per giustificare l’utilizzo di GIT sono:
	- GIT facilita il lavoro in gruppo in quanto è possibile dividersi
	i compiti da svolgere in branch.		

	- GIT permette di ritornare a versioni precedenti del proprio 
	lavoro in caso di errore.
	
7) La differenza tra git clone e git pull è che git clone oltre a copiare 
copiare l'intera repository esegue già il comando GIT INIT; git pull
permette di copiare solo la commit più recente del branch.

8) I rami di sviluppo in GIT (branches) permettono all'utente di lavorare 
fuori dal MAIN (o MASTER) e quindi di aggiungere nuove funzioni che solo dopo
che esse saranno complete verranno "fuse" con il MAIN.
Grazie ai branch è quindi possibile avere sempre una versione aggiornata del MAIN
in quanto questo non verrà modificato fino a completazione di un branch.

Per creare un branch si utilizza il comando 
GIT CHECKOUT -B [NOME DEL BRANCH DA CREARE].

Per spostarsi in un branch esistente si utilizza il comando
GIT CHECKOUT [NOME DEL BRANCH IN QUI SPOSTARSI].

Per unire le modifiche tra due branch si utilizza il comando
GIT MERGE [NOME DEL BRANCH DA UNIRE]
verranno uniti il branch in qui ci si trova con quello selezionato nel comando merge.

Per vedere in che branch ci troviamo si utilizza il comando
GIT LOG

9) L’ingegneria del software si occupa di:
	-PROGETTAZIONE: cioè la creazione di un progetto;
	
	-PROGRAMMAZIONE: la creazione del programma;

	-RIUTILIZZO: ovvero se delle parti di codice possono venire riutilizzate;

	-MANUTENZIONE: consiste nel mantenere il programma aggiornato in base alle
	esigenze del cliente e privo di errori.

10) Il ciclo di vita del software sono le fasi che costituiscono il software dalla creazione
fino a quando esso non verrà più utilizzato.
Le fasi in cui è suddivisa la vita del software sono:
	-ANALISI: vengono valutati i costi per la realizzazione e i requisiti del sistema;
	
	-PROGETTAZIONE: viene deciso cosa bisogna fare e viene assegnato il Project
	Manager e il lavoro che dovrà svolgere ogni programmatore;

	-REALIZZAZIONE: viene realizzato il programma;

	-AVVIO IN PRODUZIONE: viene consegnato e collaudato il programma dal cliente;
	
	-MANUTENZIONE: eistono tre tipi di mautenzione:
		-manutenzione adattativa: vengono modificate delle funzioni;
		-manutenzione correttiva: viene corretto un eventuale errore nel programma;
		-manutenzione evoloutiva: vengono aggiunte funzioni in base alle esigenze 
		del cliente.